{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Research Design Documents For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Research Design Documents"},{"location":"#research-design-documents","text":"For full documentation visit mkdocs.org .","title":"Research Design Documents"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"02_setup/","text":"Project Setup","title":"Project Setup"},{"location":"02_setup/#project-setup","text":"","title":"Project Setup"},{"location":"03_references/","text":"Reference add ( rdr , protocol ) Add a protocol to a research design record. Source code in rdr/cli.py 156 157 158 159 160 161 @app . command () def add ( rdr : str , protocol : str ): \"\"\" Add a protocol to a research design record. \"\"\" typer . echo ( \"Creating new rdr\" ) callback () Research Design Records (RDR) Source code in rdr/cli.py 28 29 30 31 32 @app . callback () def callback (): \"\"\" Research Design Records (RDR) \"\"\" compile () Compiles the research design. Source code in rdr/cli.py 165 166 167 168 169 170 @app . command () def compile (): \"\"\" Compiles the research design. \"\"\" typer . echo ( \"Creating new rdr\" ) init ( path = '.' , overwrite = False ) Initialize a new RDR project. Source code in rdr/cli.py 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 @app . command () def init ( path : str = \".\" , overwrite : bool = False ): \"\"\" Initialize a new RDR project. \"\"\" typer . echo ( \"Initializing project\" ) # test if config file already exists config_file = utils . search_upwards_for_file ( CONFIG_NAME ) if config_file : log . warn ( f \"An existing rdr configuration is detected at: { config_file } \" ) if overwrite : typer . echo ( \"Overwriting!\" ) else : raise typer . Abort () # this should create the config file config = confuse . Configuration ( 'rdr' , __name__ ) with open ( os . path . join ( path , CONFIG_NAME ), 'w' ) as fh : fh . write ( config . dump ()) log . info ( f \"Configuration created at: { os . path . join ( path , CONFIG_NAME ) } \" ) # create directories for dir_name in [ 'rdr-path' , 'mp-path' , 'dp-path' , 'ep-path' ]: log . info ( f \"Creating directory: { config [ dir_name ] . as_filename () } \" ) Path ( config [ dir_name ] . as_filename ()) . mkdir ( parents = True , exist_ok = True ) ls () List resources in the project. Source code in rdr/cli.py 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 @app . command () def ls (): \"\"\" List resources in the project. \"\"\" typer . echo ( \"Listing all records and protocols\" ) # TODO: load configuration log . info ( \"This is a test\" ) config_file = utils . search_upwards_for_file ( CONFIG_NAME ) if not config_file : typer . echo ( \"No existing RDR configuration is detected.\" ) raise typer . Abort () config = confuse . Configuration ( 'rdr' , __name__ ) config . set_file ( config_file , base_for_paths = True ) # list all Markdown files under path directory = Path ( config [ 'rdr-path' ] . as_filename ()) listing = list ( directory . glob ( '*.md' )) # for resource in [_.name for _ in listing]: # typer.echo(resource) list_resources ( listing ) new ( title ) Create new research design record. Source code in rdr/cli.py 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 @app . command () def new ( title : str ): \"\"\" Create new research design record. \"\"\" typer . echo ( \"Creating new rdr\" ) # TODO: load configuration conf_path = utils . search_upwards_for_file ( CONFIG_NAME ) if not conf_path : typer . echo ( \"No existing RDR configuration is detected.\" ) raise typer . Abort () config = confuse . Configuration ( 'rdr' , __name__ ) config . set_file ( conf_path , base_for_paths = True ) # TODO: load rdr index directory = Path ( config [ 'rdr-path' ] . as_filename ()) listing = list ( directory . glob ( '*.md' )) if listing : last = max ( listing ) idx = int ( '' . join ( filter ( str . isdigit , last . name ) ) ) + 1 else : idx = 1 next_id = f \"RDR- { idx : 0>4 } \" # TODO: generate next rdr id new_rdr_path = os . path . join ( config [ 'rdr-path' ] . as_filename (), next_id ) # TODO: generate new rdr file log . info ( f \"created: { new_rdr_path } .md\" ) make_rdr_md ( path = config [ 'rdr-path' ] . as_filename (), name = next_id , title = title ) view ( name ) View a resource in the terminal. Source code in rdr/cli.py 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 @app . command () def view ( name : str ): \"\"\" View a resource in the terminal. \"\"\" typer . echo ( \"Listing all records and protocols\" ) # TODO: load configuration log . info ( \"This is a test\" ) config_file = utils . search_upwards_for_file ( CONFIG_NAME ) if not config_file : typer . echo ( \"No existing RDR configuration is detected.\" ) raise typer . Abort () config = confuse . Configuration ( 'rdr' , __name__ ) config . set_file ( config_file , base_for_paths = True ) file = Path ( config [ 'rdr-path' ] . as_filename (), f \" { name } .md\" ) if file . exists (): # render markdown content to terminal # md_text = read_rdr_md(file) with open ( file ) as f : post = frontmatter . load ( f ) # md_text = file.read_text() console = Console () md = Markdown ( post . content ) console . print ( md ) else : typer . echo ( f \" { name } does not exist!\" ) raise typer . Abort () view_md ( file )","title":"Reference"},{"location":"03_references/#reference","text":"","title":"Reference"},{"location":"03_references/#rdr.cli.add","text":"Add a protocol to a research design record. Source code in rdr/cli.py 156 157 158 159 160 161 @app . command () def add ( rdr : str , protocol : str ): \"\"\" Add a protocol to a research design record. \"\"\" typer . echo ( \"Creating new rdr\" )","title":"add()"},{"location":"03_references/#rdr.cli.callback","text":"Research Design Records (RDR) Source code in rdr/cli.py 28 29 30 31 32 @app . callback () def callback (): \"\"\" Research Design Records (RDR) \"\"\"","title":"callback()"},{"location":"03_references/#rdr.cli.compile","text":"Compiles the research design. Source code in rdr/cli.py 165 166 167 168 169 170 @app . command () def compile (): \"\"\" Compiles the research design. \"\"\" typer . echo ( \"Creating new rdr\" )","title":"compile()"},{"location":"03_references/#rdr.cli.init","text":"Initialize a new RDR project. Source code in rdr/cli.py 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 @app . command () def init ( path : str = \".\" , overwrite : bool = False ): \"\"\" Initialize a new RDR project. \"\"\" typer . echo ( \"Initializing project\" ) # test if config file already exists config_file = utils . search_upwards_for_file ( CONFIG_NAME ) if config_file : log . warn ( f \"An existing rdr configuration is detected at: { config_file } \" ) if overwrite : typer . echo ( \"Overwriting!\" ) else : raise typer . Abort () # this should create the config file config = confuse . Configuration ( 'rdr' , __name__ ) with open ( os . path . join ( path , CONFIG_NAME ), 'w' ) as fh : fh . write ( config . dump ()) log . info ( f \"Configuration created at: { os . path . join ( path , CONFIG_NAME ) } \" ) # create directories for dir_name in [ 'rdr-path' , 'mp-path' , 'dp-path' , 'ep-path' ]: log . info ( f \"Creating directory: { config [ dir_name ] . as_filename () } \" ) Path ( config [ dir_name ] . as_filename ()) . mkdir ( parents = True , exist_ok = True )","title":"init()"},{"location":"03_references/#rdr.cli.ls","text":"List resources in the project. Source code in rdr/cli.py 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 @app . command () def ls (): \"\"\" List resources in the project. \"\"\" typer . echo ( \"Listing all records and protocols\" ) # TODO: load configuration log . info ( \"This is a test\" ) config_file = utils . search_upwards_for_file ( CONFIG_NAME ) if not config_file : typer . echo ( \"No existing RDR configuration is detected.\" ) raise typer . Abort () config = confuse . Configuration ( 'rdr' , __name__ ) config . set_file ( config_file , base_for_paths = True ) # list all Markdown files under path directory = Path ( config [ 'rdr-path' ] . as_filename ()) listing = list ( directory . glob ( '*.md' )) # for resource in [_.name for _ in listing]: # typer.echo(resource) list_resources ( listing )","title":"ls()"},{"location":"03_references/#rdr.cli.new","text":"Create new research design record. Source code in rdr/cli.py 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 @app . command () def new ( title : str ): \"\"\" Create new research design record. \"\"\" typer . echo ( \"Creating new rdr\" ) # TODO: load configuration conf_path = utils . search_upwards_for_file ( CONFIG_NAME ) if not conf_path : typer . echo ( \"No existing RDR configuration is detected.\" ) raise typer . Abort () config = confuse . Configuration ( 'rdr' , __name__ ) config . set_file ( conf_path , base_for_paths = True ) # TODO: load rdr index directory = Path ( config [ 'rdr-path' ] . as_filename ()) listing = list ( directory . glob ( '*.md' )) if listing : last = max ( listing ) idx = int ( '' . join ( filter ( str . isdigit , last . name ) ) ) + 1 else : idx = 1 next_id = f \"RDR- { idx : 0>4 } \" # TODO: generate next rdr id new_rdr_path = os . path . join ( config [ 'rdr-path' ] . as_filename (), next_id ) # TODO: generate new rdr file log . info ( f \"created: { new_rdr_path } .md\" ) make_rdr_md ( path = config [ 'rdr-path' ] . as_filename (), name = next_id , title = title )","title":"new()"},{"location":"03_references/#rdr.cli.view","text":"View a resource in the terminal. Source code in rdr/cli.py 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 @app . command () def view ( name : str ): \"\"\" View a resource in the terminal. \"\"\" typer . echo ( \"Listing all records and protocols\" ) # TODO: load configuration log . info ( \"This is a test\" ) config_file = utils . search_upwards_for_file ( CONFIG_NAME ) if not config_file : typer . echo ( \"No existing RDR configuration is detected.\" ) raise typer . Abort () config = confuse . Configuration ( 'rdr' , __name__ ) config . set_file ( config_file , base_for_paths = True ) file = Path ( config [ 'rdr-path' ] . as_filename (), f \" { name } .md\" ) if file . exists (): # render markdown content to terminal # md_text = read_rdr_md(file) with open ( file ) as f : post = frontmatter . load ( f ) # md_text = file.read_text() console = Console () md = Markdown ( post . content ) console . print ( md ) else : typer . echo ( f \" { name } does not exist!\" ) raise typer . Abort () view_md ( file )","title":"view()"}]}